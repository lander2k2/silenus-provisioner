[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

[program:db]
command=postgres -D /usr/local/var/postgres
autostart=false
stdout_logfile=/tmp/postgres.log
stderr_logfile=/tmp/postgres.error.log
priority=1

[program:broker]
command=rabbitmq-server
autostart=false
stdout_logfile=/tmp/rabbitmq.log
stderr_logfile=/tmp/rabbitmq.error.log
priority=1

[program:api]
command=hug -f ../provisioner/api.py
autostart=false
stdout_logfile=/tmp/hug.log
stderr_logfile=/tmp/hug.error.log
priority=2

[program:worker]
command=celery -A provisioner.tasks worker --loglevel=info
autostart=false
stdout_logfile=/tmp/celery.log
stderr_logfile=/tmp/celery.error.log
priority=2

[group:provisioner]
programs=db,broker,api,worker

[program:test_worker]
command=celery -A provisioner.tasks worker --loglevel=info
autostart=false
stdout_logfile=/tmp/test_celery.log
stderr_logfile=/tmp/test_celery.error.log
priority=2
environment=POSTGRES_DB="%(ENV_TEST_POSTGRES_DB)s"

